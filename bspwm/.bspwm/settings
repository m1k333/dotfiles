#!/bin/sh

## Panel variables
PANEL_FONT='-*-terminus-bold-*-*-*-17-*-*-*-*-*-*-*'
PANEL_HEIGHT=20
PANEL_FIFO='/tmp/bspwm/panel-fifo'
PANEL_HIDDEN_FLAG='/tmp/bspwm/panel-hidden'
BATTERY_LOC='NONE' # BATTERY='NONE' to disable bat. monitor
BATTERY_NOW="${BATTERY_LOC}/current"
BATTERY_FULL="${BATTERY_LOC}/full"
BATTERY_STATUS="${BATTERY_LOC}/status"

## BSPWM variables
BORDER_WIDTH=2
WINDOW_GAP=3
BSPWM_INITIALIZED_FLAG='/tmp/bspwm/initialized'

## Colour scheme
foreground='93a1a1'
background='000000'
black='000000'
blue='268bd2'
cyan='2aa198'
green='859900'
magenta='d33682'
orange='cb4b16'
red='dc322f'
violet='6c71c4'
white='B0B0B0'
yellow='b58900'

## Get set up
mkdir /tmp/bspwm/ 2> /dev/null

## Toggle panel visibility
panel_toggle()
{
    if [ -e $PANEL_HIDDEN_FLAG ]
    then
        xdotool search --name '_bspwmpanelbar_' windowmap
        bspc config top_padding $PANEL_HEIGHT
        rm -f $PANEL_HIDDEN_FLAG
    else
        xdotool search --name '_bspwmpanelbar_' windowunmap
        bspc config top_padding 0
        touch $PANEL_HIDDEN_FLAG
    fi;
}

## Modified version of suckless' dmenu_run -- call with any argument from
## within bspwm to float the window spawned from the dmenu input
panel_dmenu()
{
    [ -n "$1" ] && FLOAT=true || FLOAT=false
    $FLOAT && bspc rule -a \* -o floating=on

    CACHE="${XDG_CACHE_HOME:-"${HOME}/.cache"}/dmenu_run"
    IFS=:
    stest -dqr -n $CACHE $PATH && stest -flx $PATH | sort -u > $CACHE

    [ -e $PANEL_HIDDEN_FLAG ] && bspc config top_padding $PANEL_HEIGHT

        #dmenu -i -f -h ${PANEL_HEIGHT} -fn "${PANEL_FONT}"  \
    DMENU_CMD="$(                               \
        dmenu -i -f -fn "${PANEL_FONT}"         \
        -nf "#$foreground" -nb "#$background"   \
        -sf "#$blue"       -sb "#$background"   \
        < ${CACHE}
    )"

    [ -e $PANEL_HIDDEN_FLAG ] && bspc config top_padding 0;

    if [ -n "$DMENU_CMD" ]
    then
        $FLOAT && DMENU_CMD="${DMENU_CMD} ; bspc rule -r \*"
        eval $DMENU_CMD &
    elif $FLOAT
    then
        bspc rule -r \*
    fi
}

## Safely kill bspwm
bspwm_quit()
{
    rm -Rf /tmp/bspwm/

    for ARG in bspwm-panel xtitle bspc
    do
        while pgrep -x $ARG > /dev/null 2>&1
        do
            pkill -x -9 $ARG 2> /dev/null
        done
    done
    bspc quit;
}

## EOF #################################################################
